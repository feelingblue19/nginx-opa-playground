server {
    listen 8080;

    # Error responses
    error_page 401 = @401;
    location @401 { return 401 '{"status":401,"message":"Unauthorized"}\n'; }

    error_page 403 = @403;
    location @403 { return 403 '{"status":403,"message":"Forbidden"}\n'; } 

    error_page 404 = @404;
    location @404 { return 403 '{"status":404,"message":"Resource Not Found"}\n'; } 

    proxy_intercept_errors on;     
    default_type application/json;

    # Auth service
    location /_auth {
        internal;
        proxy_pass http://auth-service:3000/;

        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Remote-Addr $remote_addr;
        proxy_set_header X-Original-Host $host;
        proxy_set_header X-Original-Method $request_method;
    }

    location /first-service {
        auth_request /_auth;
        proxy_pass http://first-service:3000/;
    }

    location /second-service {
        auth_request /_auth;
        proxy_pass http://second-service:3000/;
    }
}